/*
 * LoginPanel.java
 *
 * Created on October 29, 2007, 1:00 PM
 */

package ui;

import bean.admin.AppConfig;
import bean.admin.LoginMonitor;
import common2.Common2View;
import component.SpringCall;
import constants.UserInfo;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import service.util.AbstractIBean;
import springbean.AAAConfig;
import springbean.SuccessfulLogin;
import util.PanelUtil;

/**
 * 
 * @author Budoy Entokwa
 */
public class LoginPanel extends JPanel {

	/** Creates new form LoginPanel */
	public LoginPanel() {
		initComponents();
		util.AccessControlUtil.setAccessControl(Common2View.mainView
				.getMenuBar());
		Logger.getLogger("global").log(Level.INFO, "LOGIN PANEL");
		// setup host and port values
		txtHost.setText(AAAConfig.getInstance().getHost());
		txtPort.setVisible(false);
		lblPort.setVisible(false);
		if (constants.Constants.panelBackground != null) {
			PanelUtil.updateColor(this);
			PanelUtil.updateColor(pnlButton);
			PanelUtil.updateColor(pnlHost);
			PanelUtil.updateColor(this.lblHost);
			PanelUtil.updateColor(this.lblPass);
			PanelUtil.updateColor(this.lblPort);
			PanelUtil.updateColor(this.lblUser);
		}
		try {
			if (AppConfig.isShowHostLogin()) {
				pnlHost.setVisible(true);
			} else {
				pnlHost.setVisible(false);
			}
		} catch (Exception e) {
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		btnChangePassword = new javax.swing.JButton();
		dlgChangePassword = new javax.swing.JDialog();
		jLabel3 = new javax.swing.JLabel();
		txtChangeUsername = new component.JTextFieldPallete();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		btnChangePasswordNow = new javax.swing.JButton();
		txtChangePassword = new javax.swing.JPasswordField();
		txtChangeNewPassword = new javax.swing.JPasswordField();
		txtChangeRetypePassword = new javax.swing.JPasswordField();
		lblPort = new javax.swing.JLabel();
		txtPort = new javax.swing.JTextField();
		lblUser = new javax.swing.JLabel();
		lblPass = new javax.swing.JLabel();
		txtPassword = new javax.swing.JPasswordField();
		txtUserName = new component.JTextFieldPallete();
		pnlButton = new javax.swing.JPanel();
		btnLogin = new javax.swing.JButton();
		pnlHost = new javax.swing.JPanel();
		lblHost = new javax.swing.JLabel();
		txtHost = new javax.swing.JTextField();

		btnChangePassword.setFont(new java.awt.Font("Tahoma", 0, 12));
		btnChangePassword.setText("Change Password");
		btnChangePassword
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						btnChangePasswordActionPerformed(evt);
					}
				});

		dlgChangePassword.setTitle("Change Password");
		dlgChangePassword.setAlwaysOnTop(true);
		dlgChangePassword.setModal(true);
		dlgChangePassword.getContentPane().setLayout(
				new java.awt.GridBagLayout());

		jLabel3.setText("User Name:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
		dlgChangePassword.getContentPane().add(jLabel3, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.ipadx = 120;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
		dlgChangePassword.getContentPane().add(txtChangeUsername,
				gridBagConstraints);

		jLabel4.setText("Password:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 13, 2, 0);
		dlgChangePassword.getContentPane().add(jLabel4, gridBagConstraints);

		jLabel5.setText("New Password:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
		dlgChangePassword.getContentPane().add(jLabel5, gridBagConstraints);

		jLabel6.setText("Retype New Password:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 13, 2, 0);
		dlgChangePassword.getContentPane().add(jLabel6, gridBagConstraints);

		btnChangePasswordNow.setText("Change Password");
		btnChangePasswordNow
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						btnChangePasswordNowActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 4;
		dlgChangePassword.getContentPane().add(btnChangePasswordNow,
				gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.ipadx = 120;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 1, 2, 0);
		dlgChangePassword.getContentPane().add(txtChangePassword,
				gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.ipadx = 120;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
		dlgChangePassword.getContentPane().add(txtChangeNewPassword,
				gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.ipadx = 120;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 1, 2, 0);
		dlgChangePassword.getContentPane().add(txtChangeRetypePassword,
				gridBagConstraints);

		lblPort.setText("Port:");

		setLayout(new java.awt.GridBagLayout());

		lblUser.setFont(new java.awt.Font("Tahoma", 0, 12));
		lblUser.setText("Username:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 1, 5, 0);
		add(lblUser, gridBagConstraints);

		lblPass.setFont(new java.awt.Font("Tahoma", 0, 12));
		lblPass.setText("Password:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 1, 5, 0);
		add(lblPass, gridBagConstraints);

		txtPassword.setFont(new java.awt.Font("Tahoma", 0, 12));
		txtPassword.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtPasswordActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 1, 5, 0);
		add(txtPassword, gridBagConstraints);

		txtUserName.setFont(new java.awt.Font("Tahoma", 0, 12));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.ipadx = 200;
		gridBagConstraints.insets = new java.awt.Insets(0, 1, 4, 0);
		add(txtUserName, gridBagConstraints);

		btnLogin.setFont(new java.awt.Font("Tahoma", 0, 12));
		btnLogin.setText("Login");
		btnLogin.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnLoginActionPerformed(evt);
			}
		});
		pnlButton.add(btnLogin);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.gridwidth = 2;
		add(pnlButton, gridBagConstraints);

		pnlHost.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
				"Use Server:", javax.swing.border.TitledBorder.CENTER,
				javax.swing.border.TitledBorder.DEFAULT_POSITION));
		pnlHost.setLayout(new java.awt.GridBagLayout());

		lblHost.setText("Host:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
		pnlHost.add(lblHost, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.ipadx = 60;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
		pnlHost.add(txtHost, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 4, 0);
		add(pnlHost, gridBagConstraints);
	}// </editor-fold>//GEN-END:initComponents

	private void btnChangePasswordNowActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnChangePasswordNowActionPerformed
		// check if password is same with retype
		String newPassword = txtChangeNewPassword.getText().toUpperCase();
		if (newPassword == null
				|| newPassword.isEmpty()
				|| !newPassword.equalsIgnoreCase(txtChangeRetypePassword
						.getText())) {
			PanelUtil
					.showMessage(btnChangePassword,
							"Please retype new password, be sure that it has same value.");
			return;
		}
		// check if the username/password is valid
		String username = txtChangeUsername.getText().toUpperCase();
		String password = txtChangePassword.getText().toUpperCase();
		bean.admin.AclUser user = (bean.admin.AclUser) AbstractIBean
				.firstRecord("SELECT a FROM AclUser a WHERE a.userid='"
						+ username + "' AND a.password='" + password + "'");
		if (user == null || user.getUserid() == null
				|| user.getUserid().isEmpty()) {
			PanelUtil.showMessage(btnChangePassword,
					"Invalid username and password.");
			return;
		} else {
			user.setPassword(newPassword);
			user.save();
			dlgChangePassword.setVisible(false);
			PanelUtil
					.showMessage(btnChangePassword,
							"Change password was successful. You can now login with your new password.");
		}
	}// GEN-LAST:event_btnChangePasswordNowActionPerformed

	private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnChangePasswordActionPerformed
		dlgChangePassword.pack();
		dlgChangePassword.setVisible(true);
	}// GEN-LAST:event_btnChangePasswordActionPerformed

	private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLoginActionPerformed
		String user = txtUserName.getText();
		@SuppressWarnings("deprecation")
		String pass = txtPassword.getText();
		if (PanelUtil.isEmpty(user) || PanelUtil.isEmpty(pass)) {
			PanelUtil.showError(btnLogin, "Please type your username and password.");
			return;
		}
		AAAConfig.getInstance().setHost(txtHost.getText());
		constants.Constants.host = txtHost.getText();
		if (constants.Constants.host == null || constants.Constants.host.isEmpty()) {
			AAAConfig.getInstance().setHost(txtHost.getText());
		}
		UserInfo.clear();
		UserInfo userInfo = UserInfo.login(user, pass.toUpperCase());
		if (userInfo == null) {
			PanelUtil.showError(btnLogin, "Invalid username or password.");
			return;
		}
		Common2View.lstPanel.clear();
		Common2View.mapPanels.clear();

		util.AccessControlUtil.setAccessControl(Common2View.mainView.getMenuBar());
		SpringCall.getSpringCallBean(SuccessfulLogin.class).call(userInfo);
		LoginMonitor.addLogin();
		this.getParent().setVisible(false);
	}// GEN-LAST:event_btnLoginActionPerformed

	private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtPasswordActionPerformed
		btnLoginActionPerformed(null);
	}// GEN-LAST:event_txtPasswordActionPerformed

	// @Override
	// public String getTitle() {
	// return "Login";
	// }

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnChangePassword;
	private javax.swing.JButton btnChangePasswordNow;
	private javax.swing.JButton btnLogin;
	private javax.swing.JDialog dlgChangePassword;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel lblHost;
	private javax.swing.JLabel lblPass;
	private javax.swing.JLabel lblPort;
	private javax.swing.JLabel lblUser;
	private javax.swing.JPanel pnlButton;
	private javax.swing.JPanel pnlHost;
	private javax.swing.JPasswordField txtChangeNewPassword;
	private javax.swing.JPasswordField txtChangePassword;
	private javax.swing.JPasswordField txtChangeRetypePassword;
	private component.JTextFieldPallete txtChangeUsername;
	private javax.swing.JTextField txtHost;
	private javax.swing.JPasswordField txtPassword;
	private javax.swing.JTextField txtPort;
	private component.JTextFieldPallete txtUserName;
	// End of variables declaration//GEN-END:variables

}
