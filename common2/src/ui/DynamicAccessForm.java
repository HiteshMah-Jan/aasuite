package ui;

import bean.admin.AppConfig;
import bean.admin.DynamicAccess;
import common2.Common2View;
import component.AbstractPanel;
import component.IRule;
import component.LineNumber;
import groovy.ui.Console;
import java.awt.EventQueue;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.JTextArea;
import service.util.AbstractIBean;
import service.util.WSPersistenceEntityManager;
import template.screen.TransactionPanel;
import util.BeanUtil;
import util.PanelUtil;
import util.ScriptRunner;

public class DynamicAccessForm extends AbstractPanel {

    @Override
    public String getHelpName() {
        return "Module.Administration.Dynamic Access";
    }
    
    public DynamicAccessForm() {
        try {
            initComponents();
            LineNumber lineNumber = new LineNumber(txtOnClick);
            lineNumber.setPreferredSize(999);
            srcOnClick.setRowHeaderView(lineNumber);

            LineNumber lineNumber2 = new LineNumber(txtOnLostFocus);
            lineNumber2.setPreferredSize(999);
            srcOnLostFocus.setRowHeaderView(lineNumber2);

            LineNumber lineNumber3 = new LineNumber(txtOnValueChange);
            lineNumber3.setPreferredSize(999);
            srcOnValueChange.setRowHeaderView(lineNumber3);
        }
        catch (Exception e) {            
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = WSPersistenceEntityManager.getInstance();
        newButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT d FROM DynamicAccess d");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        btnInspect = new javax.swing.JButton();
        dlgDynamicAccess = new javax.swing.JDialog();
        pnlMain = new javax.swing.JPanel();
        myTab = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        srcOnClick = new javax.swing.JScrollPane();
        txtOnClick = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        srcOnValueChange = new javax.swing.JScrollPane();
        txtOnValueChange = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        srcOnLostFocus = new javax.swing.JScrollPane();
        txtOnLostFocus = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblFormTitle = new javax.swing.JLabel();
        usersLabel = new javax.swing.JLabel();
        groupsLabel = new javax.swing.JLabel();
        dutiesLabel = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        btnToolFor = new javax.swing.JButton();
        btnToolIf = new javax.swing.JButton();
        btnToolIfElse = new javax.swing.JButton();
        btnToolSet = new javax.swing.JButton();
        btnToolGet = new javax.swing.JButton();
        btnToolTry = new javax.swing.JButton();
        btnToolPrint = new javax.swing.JButton();
        btnToolSelect = new javax.swing.JButton();
        btnToolSelectList = new javax.swing.JButton();
        btnToolPersist = new javax.swing.JButton();
        btnToolReport = new javax.swing.JButton();
        btnTestOnClick = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsole = new javax.swing.JTextPane();
        dlgHelp = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtHelp = new javax.swing.JTextArea();

        FormListener formListener = new FormListener();

        newButton.setText("New");
        newButton.addActionListener(formListener);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(formListener);

        saveButton.setText("Save");
        saveButton.addActionListener(formListener);

        deleteButton.setText("Delete");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(formListener);

        btnInspect.setText("Inspect");
        btnInspect.addActionListener(formListener);

        dlgDynamicAccess.setTitle("Dynamic Access");
        dlgDynamicAccess.setModal(true);
        dlgDynamicAccess.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        txtOnClick.setColumns(20);
        txtOnClick.setRows(5);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.onClickString}"), txtOnClick, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        srcOnClick.setViewportView(txtOnClick);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(srcOnClick, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(srcOnClick, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addContainerGap())
        );

        myTab.addTab("On Click", jPanel5);

        txtOnValueChange.setColumns(20);
        txtOnValueChange.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.onValueChangeString}"), txtOnValueChange, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        srcOnValueChange.setViewportView(txtOnValueChange);

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(srcOnValueChange, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(srcOnValueChange, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addContainerGap())
        );

        myTab.addTab("On Value Change", jPanel6);

        txtOnLostFocus.setColumns(20);
        txtOnLostFocus.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.onLostFocusString}"), txtOnLostFocus, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        srcOnLostFocus.setViewportView(txtOnLostFocus);

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(srcOnLostFocus, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(srcOnLostFocus, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addContainerGap())
        );

        myTab.addTab("On Lost Focus", jPanel7);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${code}"));
        columnBinding.setColumnName("Code");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        masterScrollPane.setViewportView(masterTable);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblFormTitle.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.formTitle}"), lblFormTitle, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        lblFormTitle.addMouseListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(lblFormTitle, gridBagConstraints);

        usersLabel.setText("Users:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(usersLabel, gridBagConstraints);

        groupsLabel.setText("Groups:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(groupsLabel, gridBagConstraints);

        dutiesLabel.setText("Duties:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(dutiesLabel, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Toolbar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        btnToolFor.setText("for");
        btnToolFor.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolFor, gridBagConstraints);

        btnToolIf.setText("if");
        btnToolIf.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolIf, gridBagConstraints);

        btnToolIfElse.setText("ifelse");
        btnToolIfElse.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolIfElse, gridBagConstraints);

        btnToolSet.setText("set");
        btnToolSet.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolSet, gridBagConstraints);

        btnToolGet.setText("get");
        btnToolGet.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolGet, gridBagConstraints);

        btnToolTry.setText("try");
        btnToolTry.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolTry, gridBagConstraints);

        btnToolPrint.setText("print");
        btnToolPrint.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolPrint, gridBagConstraints);

        btnToolSelect.setText("select");
        btnToolSelect.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolSelect, gridBagConstraints);

        btnToolSelectList.setText("selectlist");
        btnToolSelectList.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolSelectList, gridBagConstraints);

        btnToolPersist.setText("persist");
        btnToolPersist.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolPersist, gridBagConstraints);

        btnToolReport.setText("report");
        btnToolReport.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnToolReport, gridBagConstraints);

        btnTestOnClick.setText("Test Code");
        btnTestOnClick.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnTestOnClick, gridBagConstraints);

        btnSave.setText("Save");
        btnSave.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel8.add(btnSave, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(masterScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(8, 8, 8)
                .add(masterScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(txtConsole);

        org.jdesktop.layout.GroupLayout pnlMainLayout = new org.jdesktop.layout.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                    .add(myTab, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(pnlMainLayout.createSequentialGroup()
                        .add(myTab, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        dlgDynamicAccess.getContentPane().add(pnlMain);

        dlgHelp.setMinimumSize(new java.awt.Dimension(350, 250));

        txtHelp.setColumns(20);
        txtHelp.setRows(5);
        txtHelp.setText("This for is used as business rule on on click, on value change and on lost focus of fields.\n\n\nSample Code:\n\nconsole.text=\"This is a test\";\n//the sample code will display the \"This is a test\" in the console tab.\n\nmodule.txtFirstName.text = \"Allan\";\n//the sample code will put the value Allan to the current module txtFirstName field.\n\nconsole.text=module.txtFirstName.text;\n//this puts the value of txtFirstName to console\n\nNote: You can use all the API of Java and API of SoftLabs.\n");
        jScrollPane2.setViewportView(txtHelp);

        org.jdesktop.layout.GroupLayout dlgHelpLayout = new org.jdesktop.layout.GroupLayout(dlgHelp.getContentPane());
        dlgHelp.getContentPane().setLayout(dlgHelpLayout);
        dlgHelpLayout.setHorizontalGroup(
            dlgHelpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(dlgHelpLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                .addContainerGap())
        );
        dlgHelpLayout.setVerticalGroup(
            dlgHelpLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(dlgHelpLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 28, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 23, Short.MAX_VALUE)
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == newButton) {
                DynamicAccessForm.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                DynamicAccessForm.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                DynamicAccessForm.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                DynamicAccessForm.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == btnInspect) {
                DynamicAccessForm.this.btnInspectActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolFor) {
                DynamicAccessForm.this.btnToolForActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolIf) {
                DynamicAccessForm.this.btnToolIfActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolIfElse) {
                DynamicAccessForm.this.btnToolIfElseActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolSet) {
                DynamicAccessForm.this.btnToolSetActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolGet) {
                DynamicAccessForm.this.btnToolGetActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolTry) {
                DynamicAccessForm.this.btnToolTryActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolPrint) {
                DynamicAccessForm.this.btnToolPrintActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolSelect) {
                DynamicAccessForm.this.btnToolSelectActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolSelectList) {
                DynamicAccessForm.this.btnToolSelectListActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolPersist) {
                DynamicAccessForm.this.btnToolPersistActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolReport) {
                DynamicAccessForm.this.btnToolReportActionPerformed(evt);
            }
            else if (evt.getSource() == btnTestOnClick) {
                DynamicAccessForm.this.btnTestOnClickActionPerformed(evt);
            }
            else if (evt.getSource() == btnSave) {
                DynamicAccessForm.this.btnSaveActionPerformed(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == lblFormTitle) {
                DynamicAccessForm.this.lblFormTitleMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

private void lblFormTitleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFormTitleMouseClicked
    dlgDynamicAccess.setVisible(false);
    BusinessRuleForm.showDialog();
}//GEN-LAST:event_lblFormTitleMouseClicked

private void btnToolLookupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolLookupActionPerformed
    DynamicAccess acc = (DynamicAccess) this.getBean();
    String beanName = Common2View.getTransactionPanel().getBean().getClass().getSimpleName();
    insertCode(BeanUtil.concat("\ncomponent.LookupTable.show(",acc.getCode(),", \"",Common2View.getTransactionPanel().getTitle(),"\", \"SELECT a FROM ",beanName," a\",\"seq\");//Note: You can put as many column here.\n"));
}//GEN-LAST:event_btnToolLookupActionPerformed

private void btnToolForeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolForeActionPerformed
    String beanName = Common2View.getTransactionPanel().getBean().getClass().getSimpleName();
    StringBuffer sb = new StringBuffer();
    sb.append(BeanUtil.concat("\nfor (",beanName," bean : lst) {\n"));
    sb.append("\t//code here\n");
    sb.append("}");
    insertCode(sb.toString());     
}//GEN-LAST:event_btnToolForeActionPerformed

    private void insertCode(String code) {
        JTextArea mytxt = null;
        switch(myTab.getSelectedIndex()) {
        case 0:
            mytxt = txtOnClick;
            break;
        case 1:
            mytxt = txtOnValueChange;
            break;
        case 2:
            mytxt = txtOnLostFocus;
            break;
        }
        int caret = mytxt.getCaretPosition();
        mytxt.insert(code, caret);
    }
    
private void btnToolReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolReportActionPerformed
    insertCode("\nPopupReportDisplayer.showReport(\"[CHANGE TO REPORTNAME]\", \"[OPTIONAL WHERE]\");");
}//GEN-LAST:event_btnToolReportActionPerformed

private void btnToolPersistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolPersistActionPerformed
    insertCode("\nDBClient.persistBean([BEAN]);");
}//GEN-LAST:event_btnToolPersistActionPerformed

private void btnToolSelectListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolSelectListActionPerformed
    String beanName = Common2View.getTransactionPanel().getBean().getClass().getSimpleName();
    insertCode(BeanUtil.concat("\nList<",beanName,"> lst = DBClient.getList(\"SELECT a FROM ",beanName," a\");"));    
}//GEN-LAST:event_btnToolSelectListActionPerformed

private void btnToolSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolSelectActionPerformed
    String beanName = Common2View.getTransactionPanel().getBean().getClass().getSimpleName();
    String key = ((AbstractIBean) Common2View.getTransactionPanel().getBean())._Key();
    Object keyVal = ((AbstractIBean) Common2View.getTransactionPanel().getBean()).keyVal();
    insertCode(BeanUtil.concat("\n",beanName," bean = DBClient.getFirstRecord(\"SELECT a FROM ",beanName," a WHERE a.",key,"=",keyVal,"\");"));    
}//GEN-LAST:event_btnToolSelectActionPerformed

private void btnToolPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolPrintActionPerformed
    DynamicAccess acc = (DynamicAccess) this.getBean();
    insertCode(BeanUtil.concat("\nprintc ",acc.getCode(),";"));
}//GEN-LAST:event_btnToolPrintActionPerformed

private void btnToolTryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolTryActionPerformed
    StringBuffer sb = new StringBuffer();
    sb.append("\ntry {\n");
    sb.append("\t//code here\n");
    sb.append("}\n");
    sb.append("catch (Exception e) {\n");
    sb.append("\te.printStackTrace();\n");
    sb.append("}");
    insertCode(sb.toString());
}//GEN-LAST:event_btnToolTryActionPerformed

private void btnToolGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolGetActionPerformed
    DynamicAccess acc = (DynamicAccess) this.getBean();
    insertCode(BeanUtil.concat("\ntxt = ",acc.getCode(),";"));
}//GEN-LAST:event_btnToolGetActionPerformed

private void btnToolSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolSetActionPerformed
    DynamicAccess acc = (DynamicAccess) this.getBean();
    insertCode(BeanUtil.concat("\n",acc.getCode()," = \"txt\";"));
}//GEN-LAST:event_btnToolSetActionPerformed

private void btnToolIfElseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolIfElseActionPerformed
    DynamicAccess acc = (DynamicAccess) this.getBean();
    StringBuffer sb = new StringBuffer();
    sb.append(BeanUtil.concat("\nif (",acc.getCode(),".equals(\"sample\")) {\n"));
    sb.append("\t//code here\n");
    sb.append("}\n");
    sb.append("else {\n");
    sb.append("\t//code here\n");
    sb.append("}");
    insertCode(sb.toString());
}//GEN-LAST:event_btnToolIfElseActionPerformed

private void btnToolIfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolIfActionPerformed
    DynamicAccess acc = (DynamicAccess) this.getBean();
    StringBuffer sb = new StringBuffer();
    sb.append(BeanUtil.concat("\nif (",acc.getCode(),".equals(\"sample\")) {\n"));
    sb.append("\t//code here\n");
    sb.append("}\n");
    insertCode(sb.toString());
}//GEN-LAST:event_btnToolIfActionPerformed

private void btnToolForActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolForActionPerformed
    StringBuffer sb = new StringBuffer();
    sb.append("\nfor (int i = 0; i < arr.length; i++) {\n");
    sb.append("\tObject object = (Object)arr[i];\n");
    sb.append("\t//code here\n");
    sb.append("}");
    insertCode(sb.toString());
}//GEN-LAST:event_btnToolForActionPerformed

private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
    dlgHelp.setVisible(true);
}//GEN-LAST:event_btnHelpActionPerformed

private void btnImportFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportFromFileActionPerformed
//    File f = PanelUtil.showOpenFile("Import File to DB", constants.Constants.module,"-dyn.rul", btnImportFromFile);
//    XMLTester.importFromFile(f);
}//GEN-LAST:event_btnImportFromFileActionPerformed

private void btnExportAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportAllActionPerformed
//    File f = PanelUtil.showSelectFile("Export DB to File", constants.Constants.module,"-dyn.rul", btnExportAll);
//    XMLTester.exportToFile(f, "DynamicAccess");
}//GEN-LAST:event_btnExportAllActionPerformed

private void btnExportSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportSingleActionPerformed
//    DynamicAccess acc = (DynamicAccess) this.getBean();
//    File f = PanelUtil.showSelectFile("Export DB to File", constants.Constants.module,"-dyn.rul", btnExportAll);
//    XMLTester.exportBeanSQLToFile(f, "SELECT a FROM DynamicAccess a WHERE a.seq=",acc.getSeq());
}//GEN-LAST:event_btnExportSingleActionPerformed

private void btnTestOnClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestOnClickActionPerformed
    String txt = txtOnClick.getText();
    if (myTab.getSelectedIndex()==1) {
        txt = txtOnValueChange.getText();
    }
    else if (myTab.getSelectedIndex()==2) {
        txt = txtOnLostFocus.getText();
    }
    ScriptRunner.runGroovyConsole(txt);
}//GEN-LAST:event_btnTestOnClickActionPerformed

private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
    int row = masterTable.getSelectedRow();
    DynamicAccess bean = list.get(row);
    bean.save();
    initializeComponent(currentComponent);
    TransactionPanel.dummy.resetRules();
}//GEN-LAST:event_btnSaveActionPerformed
    
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        this.refreshRecords();
    }//GEN-LAST:event_refreshButtonActionPerformed
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        this.deleteRecord();
    }//GEN-LAST:event_deleteButtonActionPerformed
    
    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        this.newRecord();
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        this.saveRecord();
    }//GEN-LAST:event_saveButtonActionPerformed

private void btnInspectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInspectActionPerformed
    Console console = new Console();
    console.setVariable("module", Common2View.getTransactionPanel());
    console.setVariable("bean", Common2View.getTransactionPanel().getBean());
    console.inspectVariables();
}//GEN-LAST:event_btnInspectActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInspect;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTestOnClick;
    private javax.swing.JButton btnToolFor;
    private javax.swing.JButton btnToolGet;
    private javax.swing.JButton btnToolIf;
    private javax.swing.JButton btnToolIfElse;
    private javax.swing.JButton btnToolPersist;
    private javax.swing.JButton btnToolPrint;
    private javax.swing.JButton btnToolReport;
    private javax.swing.JButton btnToolSelect;
    private javax.swing.JButton btnToolSelectList;
    private javax.swing.JButton btnToolSet;
    private javax.swing.JButton btnToolTry;
    private javax.swing.JButton deleteButton;
    private javax.swing.JDialog dlgDynamicAccess;
    private javax.swing.JDialog dlgHelp;
    private javax.swing.JLabel dutiesLabel;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel groupsLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFormTitle;
    private java.util.List<bean.admin.DynamicAccess> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JTabbedPane myTab;
    private javax.swing.JButton newButton;
    private javax.swing.JPanel pnlMain;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JScrollPane srcOnClick;
    private javax.swing.JScrollPane srcOnLostFocus;
    private javax.swing.JScrollPane srcOnValueChange;
    public javax.swing.JTextPane txtConsole;
    private javax.swing.JTextArea txtHelp;
    private javax.swing.JTextArea txtOnClick;
    private javax.swing.JTextArea txtOnLostFocus;
    private javax.swing.JTextArea txtOnValueChange;
    private javax.swing.JLabel usersLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new DynamicAccessForm());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    public String getTitle() {
        return "Dynamic Access";
    }

    public JTable getMasterTable() {
        return masterTable;
    }

    public List getMasterList() {
        return list;
    }

    public EntityManager getEntityManager() {
        return entityManager;
    }

    public Query getMasterQuery() {
        return query;
    }

    public Class getBeanClass() {
        return DynamicAccess.class;
    }
    
    private static List lstComponents = new ArrayList();
    public static void initializeComponent(JComponent comp) {
        lstComponents.add(comp);
    }
    public static void runInitialization() {
        if (!AppConfig.isUseDynamicAccess()) return;
        for (Object object : lstComponents) {
            if (object instanceof JComponent) {
                JComponent comp = (JComponent) object;
                String name = comp.getName();
                if (name!=null && !name.isEmpty() && comp instanceof IRule) {
                    if (Common2View.getTransactionPanel()==null) {
                        return;
                    }                
                }
            }
        }
        lstComponents.clear();
    }
    
    static JComponent currentComponent;
    public static DynamicAccessForm form;    
    public static void showDialog(JComponent comp) {
        if (form==null) form = new DynamicAccessForm();
        String name = comp.getName();
        String formTitle = Common2View.getTransactionPanel().getTitle();
        Common2View.showRule(form.pnlMain);
        currentComponent = comp;
    }

    static class RunnableComp implements Runnable {
        JComponent comp;
        RunnableComp(JComponent comp) {
            this.comp = comp;
        }
        
        public void run() {
            try {
                Thread.currentThread().sleep(1000);
            }
            catch (Exception e) {
                e.printStackTrace();
            }
            if (comp==null) return;
            String name = comp.getName();
            if (name!=null && !name.isEmpty() && comp instanceof IRule) {
                if (Common2View.getTransactionPanel()==null) {
                    return;
                }                
            }
        }
    }

    public JTextArea getActiveInput() {
        int i = myTab.getSelectedIndex();
        switch (i) {
            case 0: return txtOnClick;
            case 1: return txtOnValueChange;
            case 2: return txtOnLostFocus;
        }
        return null;
    }
}
