package ui;

import bean.admin.BusinessRuleService;
import common2.Common2View;
import component.AbstractPanel;
import java.awt.EventQueue;
import java.io.File;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.JFrame;
import javax.swing.JTable;
import service.util.AbstractIBean;
import service.util.WSPersistenceEntityManager;
import test.XMLTester;
import util.PanelUtil;
import util.ScriptRunner;

public class BusinessRuleServiceForm extends AbstractPanel {

    @Override
    public String getHelpName() {
        return "Module.Administration.Business Rule Service";
    }

    public BusinessRuleServiceForm() {
        try {
            initComponents();
        } catch (Exception e) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        entityManager = WSPersistenceEntityManager.getInstance();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT b FROM BusinessRuleService b");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        dlgService = new javax.swing.JDialog();
        pnlMain = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel = new javax.swing.JPanel();
        serviceLabel = new javax.swing.JLabel();
        txtService = new component.JTextFieldPallete();
        runMonthLabel = new javax.swing.JLabel();
        runWeekLabel = new javax.swing.JLabel();
        runDayLabel = new javax.swing.JLabel();
        runTimeLabel = new javax.swing.JLabel();
        cboRunWeek = new component.JComboBoxPallete();
        cboRunDay = new component.JComboBoxPallete();
        tmeRunTime = new component.TimeRendererPallete();
        param1Label = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtParam1 = new component.JTextFieldPallete();
        txtParam2 = new component.JTextFieldPallete();
        txtParam3 = new component.JTextFieldPallete();
        txtParam4 = new component.JTextFieldPallete();
        txtParam5 = new component.JTextFieldPallete();
        txtParam6 = new component.JTextFieldPallete();
        txtParam7 = new component.JTextFieldPallete();
        txtParam8 = new component.JTextFieldPallete();
        txtParam9 = new component.JTextFieldPallete();
        txtParam10 = new component.JTextFieldPallete();
        descriptionLabel = new javax.swing.JLabel();
        txtDescription = new component.JTextFieldPallete();
        cboRunMonth = new component.JComboBoxPallete();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRule = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        btnToolFor = new javax.swing.JButton();
        btnToolFore = new component.JButtonPallete();
        btnToolIf = new javax.swing.JButton();
        btnToolIfElse = new javax.swing.JButton();
        btnToolSet = new javax.swing.JButton();
        btnToolGet = new javax.swing.JButton();
        btnToolTry = new javax.swing.JButton();
        btnToolPrint = new javax.swing.JButton();
        btnToolSelect = new javax.swing.JButton();
        btnToolSelectList = new javax.swing.JButton();
        btnToolPersist = new javax.swing.JButton();
        btnTestOnClick = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnExportSingle = new component.JButtonPallete();
        btnExportAll = new component.JButtonPallete();
        btnImportFromFile = new component.JButtonPallete();

        FormListener formListener = new FormListener();

        saveButton.setText("Save");
        saveButton.addActionListener(formListener);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(formListener);

        newButton.setText("New");
        newButton.addActionListener(formListener);

        deleteButton.setText("Delete");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(formListener);

        dlgService.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnlMain.setLayout(new java.awt.GridLayout(1, 0));

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${service}"));
        columnBinding.setColumnName("Service");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${runMonth}"));
        columnBinding.setColumnName("Run Month");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${runWeek}"));
        columnBinding.setColumnName("Run Week");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${runDay}"));
        columnBinding.setColumnName("Run Day");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${runTime}"));
        columnBinding.setColumnName("Run Time");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${oneTimeOnly}"));
        columnBinding.setColumnName("One Time Only");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lastRunDate}"));
        columnBinding.setColumnName("Last Run Date");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        masterScrollPane.setViewportView(masterTable);

        jPanel.setLayout(new java.awt.GridBagLayout());

        serviceLabel.setText("Service:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(serviceLabel, gridBagConstraints);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.service}"), txtService, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(txtService, gridBagConstraints);

        runMonthLabel.setText("Run Month:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(runMonthLabel, gridBagConstraints);

        runWeekLabel.setText("Run Week:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 2, 0);
        jPanel.add(runWeekLabel, gridBagConstraints);

        runDayLabel.setText("Run Day:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 2, 0);
        jPanel.add(runDayLabel, gridBagConstraints);

        runTimeLabel.setText("Run Time:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 2, 0);
        jPanel.add(runTimeLabel, gridBagConstraints);

        cboRunWeek.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3" }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.runWeek}"), cboRunWeek, org.jdesktop.beansbinding.BeanProperty.create("code"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(cboRunWeek, gridBagConstraints);

        cboRunDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7" }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.runDay}"), cboRunDay, org.jdesktop.beansbinding.BeanProperty.create("code"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(cboRunDay, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.runTime}"), tmeRunTime, org.jdesktop.beansbinding.BeanProperty.create("time"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(tmeRunTime, gridBagConstraints);

        param1Label.setText("Param:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(param1Label, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param1}"), txtParam1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam1);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param2}"), txtParam2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam2);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param3}"), txtParam3, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam3);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param4}"), txtParam4, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam4);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param5}"), txtParam5, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param6}"), txtParam6, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam6);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param7}"), txtParam7, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam7);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param8}"), txtParam8, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam8);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param9}"), txtParam9, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam9);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.param10}"), txtParam10, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel2.add(txtParam10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(jPanel2, gridBagConstraints);

        descriptionLabel.setText("Description:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(descriptionLabel, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.description}"), txtDescription, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(txtDescription, gridBagConstraints);

        cboRunMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC" }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.runMonth}"), cboRunMonth, org.jdesktop.beansbinding.BeanProperty.create("code"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel.add(cboRunMonth, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, masterScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(masterScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Services", jPanel3);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rule", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txtRule.setColumns(20);
        txtRule.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.ruleString}"), txtRule, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(txtRule);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Toolbar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        btnToolFor.setText("for");
        btnToolFor.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolFor, gridBagConstraints);

        btnToolFore.setText("fore");
        btnToolFore.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolFore, gridBagConstraints);

        btnToolIf.setText("if");
        btnToolIf.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolIf, gridBagConstraints);

        btnToolIfElse.setText("ifelse");
        btnToolIfElse.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolIfElse, gridBagConstraints);

        btnToolSet.setText("set");
        btnToolSet.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolSet, gridBagConstraints);

        btnToolGet.setText("get");
        btnToolGet.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolGet, gridBagConstraints);

        btnToolTry.setText("try");
        btnToolTry.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolTry, gridBagConstraints);

        btnToolPrint.setText("print");
        btnToolPrint.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolPrint, gridBagConstraints);

        btnToolSelect.setText("select");
        btnToolSelect.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolSelect, gridBagConstraints);

        btnToolSelectList.setText("selectlist");
        btnToolSelectList.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolSelectList, gridBagConstraints);

        btnToolPersist.setText("persist");
        btnToolPersist.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnToolPersist, gridBagConstraints);

        btnTestOnClick.setText("Test Code");
        btnTestOnClick.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnTestOnClick, gridBagConstraints);

        btnSave.setText("Save");
        btnSave.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnSave, gridBagConstraints);

        btnExportSingle.setText("Export Single");
        btnExportSingle.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnExportSingle, gridBagConstraints);

        btnExportAll.setText("Export All");
        btnExportAll.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnExportAll, gridBagConstraints);

        btnImportFromFile.setText("Import From File");
        btnImportFromFile.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel8.add(btnImportFromFile, gridBagConstraints);

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 198, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Rule", jPanel4);

        pnlMain.add(jTabbedPane1);

        dlgService.getContentPane().add(pnlMain);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 120, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 122, Short.MAX_VALUE)
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                BusinessRuleServiceForm.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                BusinessRuleServiceForm.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                BusinessRuleServiceForm.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                BusinessRuleServiceForm.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolFor) {
                BusinessRuleServiceForm.this.btnToolForActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolFore) {
                BusinessRuleServiceForm.this.btnToolForeActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolIf) {
                BusinessRuleServiceForm.this.btnToolIfActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolIfElse) {
                BusinessRuleServiceForm.this.btnToolIfElseActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolSet) {
                BusinessRuleServiceForm.this.btnToolSetActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolGet) {
                BusinessRuleServiceForm.this.btnToolGetActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolTry) {
                BusinessRuleServiceForm.this.btnToolTryActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolPrint) {
                BusinessRuleServiceForm.this.btnToolPrintActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolSelect) {
                BusinessRuleServiceForm.this.btnToolSelectActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolSelectList) {
                BusinessRuleServiceForm.this.btnToolSelectListActionPerformed(evt);
            }
            else if (evt.getSource() == btnToolPersist) {
                BusinessRuleServiceForm.this.btnToolPersistActionPerformed(evt);
            }
            else if (evt.getSource() == btnTestOnClick) {
                BusinessRuleServiceForm.this.btnTestOnClickActionPerformed(evt);
            }
            else if (evt.getSource() == btnSave) {
                BusinessRuleServiceForm.this.btnSaveActionPerformed(evt);
            }
            else if (evt.getSource() == btnExportSingle) {
                BusinessRuleServiceForm.this.btnExportSingleActionPerformed(evt);
            }
            else if (evt.getSource() == btnExportAll) {
                BusinessRuleServiceForm.this.btnExportAllActionPerformed(evt);
            }
            else if (evt.getSource() == btnImportFromFile) {
                BusinessRuleServiceForm.this.btnImportFromFileActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

private void btnImportFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportFromFileActionPerformed
    File f = PanelUtil.showOpenFile("Import File to DB", constants.Constants.module+"-service.rul", btnImportFromFile);
    XMLTester.importFromFile(f);
}//GEN-LAST:event_btnImportFromFileActionPerformed

private void btnExportAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportAllActionPerformed
    File f = PanelUtil.showSelectFile("Export DB to File", constants.Constants.module+"-service.rul", btnExportAll);
    XMLTester.exportToFile(f, "BusinessRuleService");
}//GEN-LAST:event_btnExportAllActionPerformed

private void btnExportSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportSingleActionPerformed
    BusinessRuleService acc = (BusinessRuleService) this.getBean();
    File f = PanelUtil.showSelectFile("Export DB to File", constants.Constants.module+"-service.rul", btnExportAll);
    XMLTester.exportBeanSQLToFile(f, "SELECT a FROM BusinessRuleService a WHERE a.seq='"+acc.getSeq()+"'");
}//GEN-LAST:event_btnExportSingleActionPerformed

private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
    this.saveRecord();
}//GEN-LAST:event_btnSaveActionPerformed

private void btnTestOnClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestOnClickActionPerformed
    String txt = txtRule.getText();
    ScriptRunner.runGroovyBackground(txt, null, null);
}//GEN-LAST:event_btnTestOnClickActionPerformed

private void btnToolPersistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolPersistActionPerformed
    insertCode("\nDBClient.persistBean([BEAN]);");
}//GEN-LAST:event_btnToolPersistActionPerformed

private void btnToolSelectListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolSelectListActionPerformed
    String beanName = "Department";
    insertCode("\nList<"+beanName+"> lst = DBClient.getList(\"SELECT a FROM "+beanName+" a\");");
}//GEN-LAST:event_btnToolSelectListActionPerformed

private void btnToolSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolSelectActionPerformed
    String beanName = "Department";
    String key = "department";
    Object keyVal = "ACCOUNTING";
    insertCode("\n"+beanName+" bean = DBClient.getFirstRecord(\"SELECT a FROM "+beanName+" a WHERE a."+key+"="+keyVal+"\");");
}//GEN-LAST:event_btnToolSelectActionPerformed

private void btnToolPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolPrintActionPerformed
    insertCode("\nprintc sample;");
}//GEN-LAST:event_btnToolPrintActionPerformed

private void btnToolTryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolTryActionPerformed
    StringBuffer sb = new StringBuffer();
    sb.append("\ntry {\n");
    sb.append("\t//code here\n");
    sb.append("}\n");
    sb.append("catch (Exception e) {\n");
    sb.append("\te.printStackTrace();\n");
    sb.append("}");
    insertCode(sb.toString());
}//GEN-LAST:event_btnToolTryActionPerformed

private void btnToolGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolGetActionPerformed
    insertCode("\ntxt = sample;");
}//GEN-LAST:event_btnToolGetActionPerformed

private void btnToolSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolSetActionPerformed
    insertCode("\nsample = \"txt\";");
}//GEN-LAST:event_btnToolSetActionPerformed

private void btnToolIfElseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolIfElseActionPerformed
    StringBuffer sb = new StringBuffer();
    sb.append("\nif (sample.equals(\"sample\")) {\n");
    sb.append("\t//code here\n");
    sb.append("}\n");
    sb.append("else {\n");
    sb.append("\t//code here\n");
    sb.append("}");
    insertCode(sb.toString());
}//GEN-LAST:event_btnToolIfElseActionPerformed

private void btnToolIfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolIfActionPerformed
    StringBuffer sb = new StringBuffer();
    sb.append("\nif (sample.equals(\"sample\")) {\n");
    sb.append("\t//code here\n");
    sb.append("}\n");
    insertCode(sb.toString());
}//GEN-LAST:event_btnToolIfActionPerformed

private void btnToolForeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolForeActionPerformed
    String beanName = "Department";
    StringBuffer sb = new StringBuffer();
    sb.append("\nfor ("+beanName+" bean : lst) {\n");
    sb.append("\t//code here\n");
    sb.append("}");
    insertCode(sb.toString());
}//GEN-LAST:event_btnToolForeActionPerformed

private void btnToolForActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToolForActionPerformed
    StringBuffer sb = new StringBuffer();
    sb.append("\nfor (int i = 0; i < arr.length; i++) {\n");
    sb.append("\tObject object = (Object)arr[i];\n");
    sb.append("\t//code here\n");
    sb.append("}");
    insertCode(sb.toString());
}//GEN-LAST:event_btnToolForActionPerformed

    private void insertCode(String code) {
        int caret = txtRule.getCaretPosition();
        txtRule.insert(code, caret);
    }

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        this.refreshRecords();
       }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        this.deleteRecord();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        this.newRecord();
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        this.saveRecord();
    }//GEN-LAST:event_saveButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.JButtonPallete btnExportAll;
    private component.JButtonPallete btnExportSingle;
    private component.JButtonPallete btnImportFromFile;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTestOnClick;
    private javax.swing.JButton btnToolFor;
    private component.JButtonPallete btnToolFore;
    private javax.swing.JButton btnToolGet;
    private javax.swing.JButton btnToolIf;
    private javax.swing.JButton btnToolIfElse;
    private javax.swing.JButton btnToolPersist;
    private javax.swing.JButton btnToolPrint;
    private javax.swing.JButton btnToolSelect;
    private javax.swing.JButton btnToolSelectList;
    private javax.swing.JButton btnToolSet;
    private javax.swing.JButton btnToolTry;
    private component.JComboBoxPallete cboRunDay;
    private component.JComboBoxPallete cboRunMonth;
    private component.JComboBoxPallete cboRunWeek;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JDialog dlgService;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.util.List<bean.admin.BusinessRuleService> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JLabel param1Label;
    private javax.swing.JPanel pnlMain;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JLabel runDayLabel;
    private javax.swing.JLabel runMonthLabel;
    private javax.swing.JLabel runTimeLabel;
    private javax.swing.JLabel runWeekLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel serviceLabel;
    private component.TimeRendererPallete tmeRunTime;
    private component.JTextFieldPallete txtDescription;
    private component.JTextFieldPallete txtParam1;
    private component.JTextFieldPallete txtParam10;
    private component.JTextFieldPallete txtParam2;
    private component.JTextFieldPallete txtParam3;
    private component.JTextFieldPallete txtParam4;
    private component.JTextFieldPallete txtParam5;
    private component.JTextFieldPallete txtParam6;
    private component.JTextFieldPallete txtParam7;
    private component.JTextFieldPallete txtParam8;
    private component.JTextFieldPallete txtParam9;
    private javax.swing.JTextArea txtRule;
    private component.JTextFieldPallete txtService;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new BusinessRuleServiceForm());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    public String getTitle() {
        return "Business Rule Service";
    }

    public JTable getMasterTable() {
        return masterTable;
    }

    public List getMasterList() {
        return list;
    }

    public EntityManager getEntityManager() {
        return entityManager;
    }

    public Query getMasterQuery() {
        return query;
    }

    public Class getBeanClass() {
        return bean.admin.BusinessRuleService.class;
    }
    
    public static void showDialog() {
        if (form==null) form = new BusinessRuleServiceForm();
        List lst = AbstractIBean.list("SELECT a FROM BusinessRuleService a ORDER BY a.service");
        PanelUtil.setListData(form.list, lst);
        Common2View.showRule(form.pnlMain);
//
//        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
//        dim.height = dim.height - 20;
//        form.dlgService.setMinimumSize(dim);
//        form.dlgService.setVisible(true);
    }
    
    private static BusinessRuleServiceForm form;
}
