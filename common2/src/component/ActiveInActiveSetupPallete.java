/*
 * ActiveInActiveSetupPallete.java
 *
 * Created on February 3, 2008, 10:40 AM
 */

package component;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import service.util.AbstractIBean;
import service.util.WSPersistenceEntityManager;
import util.PanelUtil;

/**
 *
 * @author  Entokwaa
 */
public class ActiveInActiveSetupPallete extends javax.swing.JPanel {
    boolean firstLoad = true;
    String beanClass;

    public String getBeanClass() {
        return beanClass;
    }

    public void setBeanClass(String beanClass) {
        this.beanClass = beanClass;
        refresh();
    }
    
    public void refresh() {
        try {
            java.lang.Class cls = PanelUtil.getBeanClass(beanClass);
            java.lang.String name = cls.getSimpleName();
            java.util.List lstActive1 = AbstractIBean.list("SELECT a FROM " + name + " a WHERE a.isActive=\'true\'");
            java.util.List lstInactive1 = AbstractIBean.list("SELECT a FROM " + name + " a WHERE a.isActive=\'false\'");

            util.PanelUtil.setListData(activeList, lstActive1);
            util.PanelUtil.setListData(inactiveList, lstInactive1);
        } catch (Exception ex) {
            Logger.getLogger("global").log(Level.SEVERE, null, ex);
        }
    }
    
    /** Creates new form ActiveInActiveSetupPallete */
    public ActiveInActiveSetupPallete() {
        if (firstLoad) {
            try {
                initComponents();
            }
            catch (Exception e) {
                Logger.getLogger("global").log(Level.SEVERE, null, e);
            }
        }
        firstLoad = false;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingContext = new javax.beans.binding.BindingContext();

        schoolPUEntityManager = WSPersistenceEntityManager.getInstance();
        inactiveQuery = schoolPUEntityManager.createQuery("SELECT a FROM AclDuty a");
        inactiveList = com.sun.java.util.BindingCollections.observableList(inactiveQuery.getResultList());
        activeQuery = schoolPUEntityManager.createQuery("SELECT a FROM AccountRecievable a");
        activeList = com.sun.java.util.BindingCollections.observableList(activeQuery.getResultList());
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstInactive = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        btnActivate = new javax.swing.JButton();
        btnInactivate = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstActive = new javax.swing.JList();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inactive:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        javax.beans.binding.Binding binding = new javax.beans.binding.Binding(inactiveList, null, lstInactive, "elements");
        binding.addChildBinding("${formattedTitle}", null);
        bindingContext.addBinding(binding);

        jScrollPane1.setViewportView(lstInactive);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
        );

        jPanel1.setLayout(new java.awt.GridBagLayout());

        btnActivate.setText(">>");
        btnActivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel1.add(btnActivate, gridBagConstraints);

        btnInactivate.setText("<<");
        btnInactivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInactivateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 0);
        jPanel1.add(btnInactivate, gridBagConstraints);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 3, 0);
        jPanel1.add(btnRefresh, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Active:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        binding = new javax.beans.binding.Binding(activeList, null, lstActive, "elements");
        binding.addChildBinding("${formattedTitle}", null);
        bindingContext.addBinding(binding);

        jScrollPane2.setViewportView(lstActive);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingContext.bind();
    }// </editor-fold>//GEN-END:initComponents

private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
    refresh();
}//GEN-LAST:event_btnRefreshActionPerformed

private void btnInactivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInactivateActionPerformed
    List lst = new ArrayList();
    int[] indeces = lstActive.getSelectedIndices();
    for (int row=indeces.length-1; row>=0; row--) {
        AbstractIBean bean = (AbstractIBean) activeList.get(indeces[row]);
        bean.setIsActive(false);
        lst.add(bean);
        
        bean = activeList.remove(indeces[row]);
        inactiveList.add(bean);
    }
    AbstractIBean.save(lst);
}//GEN-LAST:event_btnInactivateActionPerformed

private void btnActivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivateActionPerformed
    List lst = new ArrayList();
    int[] indeces = lstInactive.getSelectedIndices();
    for (int row=indeces.length-1; row>=0; row--) {
        AbstractIBean bean = (AbstractIBean) inactiveList.get(indeces[row]);
        bean.setIsActive(true);
        lst.add(bean);

        bean = inactiveList.remove(indeces[row]);
        activeList.add(bean);
    }
    AbstractIBean.save(lst);
}//GEN-LAST:event_btnActivateActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<service.util.AbstractIBean> activeList;
    private javax.persistence.Query activeQuery;
    private javax.swing.JButton btnActivate;
    private javax.swing.JButton btnInactivate;
    private javax.swing.JButton btnRefresh;
    private java.util.List<service.util.AbstractIBean> inactiveList;
    private javax.persistence.Query inactiveQuery;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstActive;
    private javax.swing.JList lstInactive;
    private javax.persistence.EntityManager schoolPUEntityManager;
    private javax.beans.binding.BindingContext bindingContext;
    // End of variables declaration//GEN-END:variables
    
}
