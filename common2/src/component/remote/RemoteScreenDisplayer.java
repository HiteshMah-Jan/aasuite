/*
 * RemoteScreenDisplayer.java
 *
 * Created on February 24, 2008, 12:13 PM
 */

package component.remote;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import javax.swing.JDialog;
import util.DataUtil;
import util.ImageUtil;
import util.PanelUtil;
import util.jxta.SocketServer;
import util.jxta.temp.ChannelCommand;
import util.jxta.temp.PropagatedPipeServer;

/**
 *
 * @author  Entokwaa
 */
public class RemoteScreenDisplayer extends javax.swing.JPanel {

    Image img;
    JDialog dlgHolder;

    public void setCommand(int command) {
        if (command==ChannelCommand.MAXIMIZE_WINDOW) {
            dlgHolder.setVisible(true);
            dlgHolder.setSize(Toolkit.getDefaultToolkit().getScreenSize());
        }
        else if (command==ChannelCommand.MINIMIZE_WINDOW) {
            dlgHolder.setVisible(true);
            dlgHolder.setSize(new Dimension(50, 50));
        }
        else if (command==ChannelCommand.HIDE_WINDOW) {
            dlgHolder.setVisible(false);
        }
        else if (command==ChannelCommand.END_MEETING) {
            dlgHolder.setVisible(false);
            PanelUtil.showMessage(this, "Meeting Has Ended.");
        }
    }
    
    public void resizeHolder(String resize) {
        if (resize==null || dlgHolder==null) return;
        if (resize.equals(PropagatedPipeServer.ServerCommand.MAXIMIZE)) {
            dlgHolder.setVisible(true);
            dlgHolder.setSize(Toolkit.getDefaultToolkit().getScreenSize());
        }
        else if (resize.equals(PropagatedPipeServer.ServerCommand.MINIMIZE)) {
            dlgHolder.setVisible(true);
            dlgHolder.setSize(new Dimension(50, 50));
        }
        else if (resize.equals(PropagatedPipeServer.ServerCommand.HIDE)) {
            dlgHolder.setVisible(false);
        }
        else if (resize.equals(PropagatedPipeServer.ServerCommand.END)) {
            dlgHolder.setVisible(false);
            PanelUtil.showMessage(this, "Meeting Has Ended.");
        }
    }
    
    public JDialog getDlgHolder() {
        return dlgHolder;
    }

    public void setDlgHolder(JDialog dlgHolder) {
        this.dlgHolder = dlgHolder;
    }

    public Image getImg() {
        return img;
    }

    public void setImg(Image img) {
        this.img = img;
    }
    
    public void paintComponent(Graphics g) {
        if (img!=null) {
            g.drawImage(ImageUtil.scaleImage(img, this), 0, 0, this);
        }
    }

    /** Creates new form RemoteScreenDisplayer */
    public RemoteScreenDisplayer() {
        initComponents();
//        try {
//            Thread.currentThread().setName(SocketServer.class.getName() + ".main()");
//            SocketServer socEx = new SocketServer(this);
//            socEx.run();
//        } catch (Throwable e) {
//        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
