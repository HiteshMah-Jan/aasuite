/*
 * MediaPlayerPanel.java
 *
 * Created on February 28, 2008, 10:08 PM
 */

package util;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.media.ControllerEvent;
import javax.media.ControllerListener;
import javax.media.Manager;
import javax.media.NoPlayerException;
import javax.media.Player;
import javax.media.RealizeCompleteEvent;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import org.apache.commons.collections.set.CompositeSet.SetMutator;

/**
 *
 * @author  Entokwaa
 */
public class MediaPlayerPanel extends javax.swing.JPanel implements ActionListener, ControllerListener {
    static MediaPlayerPanel viewer;
    String moviePath;
    private Component visualComponent;
    private Player playerVideo;
    List<File> lstFiles;
    File f;

    public static void watchMovie(File movie) {
        if (viewer == null) {
            new util.MediaPlayerPanel();
        }
        viewer.f = movie;
        viewer.dlgShowMovie.setTitle("You are watching "+movie);
        viewer.setAllFiles();
        viewer.showDialogMovie();
    }

    public static void watchMovie(List<File> movie) {
        if (viewer == null) {
            new util.MediaPlayerPanel();
        }
        viewer.lstFiles = movie;
        viewer.setAllFiles();
        watchMovie();
    }

    public static void watchMovie() {
        if (viewer == null) {
            new MediaPlayerPanel();
        }
        if (viewer.lstFiles==null || viewer.lstFiles.size()==0) {
            PanelUtil.showError(viewer, "No movie to watch");
            return;
        }
        viewer.setAllFiles();
        watchMovie(viewer.lstFiles.get(0));
    }

    private void showDialogMovie() {
        playMovie();
        pnlDialogMovieViewer.removeAll();
        pnlDialogMovieViewer.add(this);
        dlgShowMovie.setVisible(true);
    }
    
    @SuppressWarnings("deprecation")
    private void playMovie() {
        try {
            if (playerVideo!=null) {
                playerVideo.stop();
                playerVideo.close();
            }
            playerVideo = null;
            visualComponent = null;
            if (f!=null && f.exists()) {
                playerVideo = Manager.createPlayer(f.toURL());
            }
            else {
                playerVideo = Manager.createPlayer(new URL("file:/" + moviePath));
            }
            pnlVideo.removeAll();
            pnlController.removeAll();
            playerVideo.removeControllerListener(this);
            playerVideo.addControllerListener(this);
            playerVideo.start();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /** Creates new form MediaPlayerPanel */
    private MediaPlayerPanel() {
        initComponents();
        viewer = this;
        pnlDialogMovieViewer.setMinimumSize(new Dimension(800, 600));
        dlgShowMovie.setMinimumSize(new Dimension(800, 600));
        dlgShowMovie.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                System.out.println("WINDOW");
                if (playerVideo!=null) {
                    playerVideo.stop();
                }
            }
        });
    }

    private void setAllFiles() {
        cboMovies.removeAllItems();
        if (lstFiles!=null && lstFiles.size()>0) {
            f = lstFiles.get(0);
            this.lstFiles = lstFiles;
            for(File f : lstFiles) {
                cboMovies.addItem(f);
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgShowMovie = new javax.swing.JDialog();
        pnlDialogMovieViewer = new javax.swing.JPanel();
        pnlVideo = new javax.swing.JPanel();
        pnlController = new javax.swing.JPanel();
        pnlMovieChooser = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboMovies = new component.JComboBoxPallete();
        btnPlaySelectedMovie = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        dlgShowMovie.setTitle("Movie Player");
        dlgShowMovie.setAlwaysOnTop(true);
        dlgShowMovie.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnlDialogMovieViewer.setLayout(new java.awt.GridLayout());
        dlgShowMovie.getContentPane().add(pnlDialogMovieViewer);

        pnlVideo.setLayout(new java.awt.GridLayout(1, 0));

        pnlController.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setText("Movies:");
        pnlMovieChooser.add(jLabel1);

        cboMovies.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1asdfasdfasdfasfdasdfasdfasfasdfqwerqwerqwerqwer" }));
        pnlMovieChooser.add(cboMovies);

        btnPlaySelectedMovie.setText("Play Movie");
        btnPlaySelectedMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaySelectedMovieActionPerformed(evt);
            }
        });
        pnlMovieChooser.add(btnPlaySelectedMovie);

        jLabel2.setText("Note: You can also watch the movie using your preferred media player");
        pnlMovieChooser.add(jLabel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlVideo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
                    .addComponent(pnlController, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
                    .addComponent(pnlMovieChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlController, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlVideo, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlMovieChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void btnPlaySelectedMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaySelectedMovieActionPerformed
    String str = cboMovies.getSelectedItem().toString();
    f = new File(str);
    if (f==null) {
        PanelUtil.showError(cboMovies, "No file selected.");
        return;
    }
    this.f = f;
    playMovie();
}//GEN-LAST:event_btnPlaySelectedMovieActionPerformed

    public void actionPerformed(ActionEvent e) {
    }

    public void controllerUpdate(ControllerEvent c) {
        if (playerVideo == null) {
            return;
        }
        if (c.getSource().equals(playerVideo) && c instanceof RealizeCompleteEvent) {
            if ((visualComponent = playerVideo.getVisualComponent()) != null) {
                pnlVideo.add(visualComponent);
                Component comp = playerVideo.getControlPanelComponent();
                pnlController.add(comp);

                pnlVideo.updateUI();
                pnlController.updateUI();
            }
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame(); 
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setAlwaysOnTop(true);
        List<File> lst = new ArrayList<File>();
        File dir = new File(constants.Constants.ROOT_FOLDER+"tmp");
        File[] fList = dir.listFiles();
        for (File f : fList) {
            lst.add(f);
        }
        MediaPlayerPanel pnl = new MediaPlayerPanel(); 
        pnl.lstFiles = lst;
        pnl.setAllFiles();
        frame.getContentPane().setLayout(new GridLayout());
        frame.getContentPane().add(pnl);
        frame.pack();
        frame.setVisible(true);
//        pnl.setMoviePath(constants.Constants.ROOT_FOLDER+"tmp/1204205017059");
        pnl.playMovie();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPlaySelectedMovie;
    private component.JComboBoxPallete cboMovies;
    private javax.swing.JDialog dlgShowMovie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel pnlController;
    private javax.swing.JPanel pnlDialogMovieViewer;
    private javax.swing.JPanel pnlMovieChooser;
    private javax.swing.JPanel pnlVideo;
    // End of variables declaration//GEN-END:variables
}
