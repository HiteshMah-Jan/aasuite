/*
 * OldStudent.java
 *
 * Created on March 25, 2009, 6:01 AM
 */
package ui.cashier;

import bean.OutPatient;
import bean.Person;
import bean.accounting.Invoice;
import component.JTextFieldPallete;
import component.LabelPallete;

import java.util.*;

import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import springbean.AAAConfig;
import template.report.AbstractReportTemplate;
import ui.AbstractCashierForm;
import util.DBClient;
import util.PanelUtil;
import constants.UserInfo;
import util.DataUtil;

/**
 *
 * @author  alex
 */
public class AcceptPaymentOPD extends javax.swing.JPanel implements IAcceptPaymentWindow {

    List planList;
    List gradeLevelList;
    private String useYear;
    public AbstractCashierForm drawer;

    public AbstractCashierForm getDrawer() {
        return drawer;
    }

    public String getUseYear() {
        return useYear;
    }

    public void setUseYear(String useYear) {
        this.useYear = useYear;
    }

    public static void main(String[] args) {
        AAAConfig.getInstance();
        AcceptPaymentOPD pnl = new AcceptPaymentOPD();
        PanelUtil.displayToFrame(pnl);
        pnl.run();
    }

    public void run() {
    }

    /** Creates new form OldStudent */
    public AcceptPaymentOPD() {
        initComponents();
        try {
            PanelUtil.updateColor(this);
            PanelUtil.updateColor(pnlBilling);
            PanelUtil.updateColor(pnlPatientInfo);
            PanelUtil.updateColor(pnPatientList);
            PanelUtil.updateColor(pnlButton);
            PanelUtil.updateColor(lblAmount);
            PanelUtil.updateColor(lblSurchargeAmount);
            pnPatientList.view.tblResult.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                public void valueChanged(ListSelectionEvent e) {
                    if (!e.getValueIsAdjusting()) {
                        reloadPayments();
                    }
                }
            });            
            pnlBilling.view.tblResult.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    changeLabelAmount();
                }
            });
            lblSurchargeAmount.setVisible(false);            
            btnAdjust.setVisible(false);
            if (UserInfo.canLockInvoice()) {
            	btnAdjust.setVisible(true);
            }
            reloadPayments();
        }
        catch (Exception e) {
        }
    }

    private void acceptPayment() {
    	AcceptPaymentRule.acceptPayment(this);
    }

    private void changeLabelAmount() {
    	int row = pnlBilling.view.tblResult.getSelectedRow();
    	List<OutPatient> lst = pnlBilling.view.list;
    	double totalAmount = 0;
    	try {
            for (int i=0; i<=row; i++) {
                OutPatient p = lst.get(i);
                totalAmount += p.totalBalance;
            }
    	}
    	catch (Exception e) {
    	}
    	((LabelPallete)lblAmount).setDoubleTxt(DataUtil.getMoneyFormat(totalAmount));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnEdit = new javax.swing.JButton();
        btnViewOtherPayments = new javax.swing.JButton();
        btnDeletePayment = new javax.swing.JButton();
        btnViewBookPayments = new javax.swing.JButton();
        btnRequestDiscount = new javax.swing.JButton();
        pnlAdjust = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnSaveAdjustment = new javax.swing.JButton();
        beanPanelPallete1 = new component.BeanPanelPallete();
        lblAmount = new LabelPallete();
        pnlButton = new javax.swing.JPanel();
        btnAcceptPayment = new javax.swing.JButton();
        btnReprintOR = new javax.swing.JButton();
        btnPrintStatementOfAccount = new javax.swing.JButton();
        btnSurchargeCalculator = new javax.swing.JButton();
        btnAdjust = new javax.swing.JButton();
        pnlSearch = new javax.swing.JPanel();
        pnPatientList = new component.BeanPanelPallete();
        pnlPatientInfo = new component.BeanPanelPallete();
        txtSearchPatient = new JTextFieldPallete();
        pnlBilling = new component.BeanPanelPallete();
        pnlPayment = new component.BeanPanelPallete();
        lblSurchargeAmount = new LabelPallete();

        btnEdit.setText("Edit"); // NOI18N
        btnEdit.setName("btnEdit"); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnViewOtherPayments.setText("View Other Payments"); // NOI18N
        btnViewOtherPayments.setName("btnViewOtherPayments"); // NOI18N
        btnViewOtherPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOtherPaymentsActionPerformed(evt);
            }
        });

        btnDeletePayment.setText("Delete Payment [TEST]"); // NOI18N
        btnDeletePayment.setName("btnDeletePayment"); // NOI18N
        btnDeletePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePaymentActionPerformed(evt);
            }
        });

        btnViewBookPayments.setText("View Book Payments"); // NOI18N
        btnViewBookPayments.setName("btnViewBookPayments"); // NOI18N
        btnViewBookPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBookPaymentsActionPerformed(evt);
            }
        });

        btnRequestDiscount.setText("Discount"); // NOI18N
        btnRequestDiscount.setName("btnRequestDiscount"); // NOI18N
        btnRequestDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestDiscountActionPerformed(evt);
            }
        });

        pnlAdjust.setName("pnlAdjust"); // NOI18N
        pnlAdjust.setLayout(new java.awt.BorderLayout());

        jPanel1.setName("jPanel1"); // NOI18N

        btnSaveAdjustment.setText("Save Adjustment"); // NOI18N
        btnSaveAdjustment.setName("btnSaveAdjustment"); // NOI18N
        btnSaveAdjustment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAdjustmentActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaveAdjustment);

        pnlAdjust.add(jPanel1, java.awt.BorderLayout.SOUTH);

        beanPanelPallete1.setBeanName("PaymentCashierAdjustmentExt"); // NOI18N
        beanPanelPallete1.setName("beanPanelPallete1"); // NOI18N
        beanPanelPallete1.setShowImage(false);

        javax.swing.GroupLayout beanPanelPallete1Layout = new javax.swing.GroupLayout(beanPanelPallete1);
        beanPanelPallete1.setLayout(beanPanelPallete1Layout);
        beanPanelPallete1Layout.setHorizontalGroup(
            beanPanelPallete1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 443, Short.MAX_VALUE)
        );
        beanPanelPallete1Layout.setVerticalGroup(
            beanPanelPallete1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnlAdjust.add(beanPanelPallete1, java.awt.BorderLayout.CENTER);

        setLayout(new java.awt.GridBagLayout());

        lblAmount.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAmount.setText("--"); // NOI18N
        lblAmount.setName("lblAmount"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(lblAmount, gridBagConstraints);

        pnlButton.setName("pnlButton"); // NOI18N

        btnAcceptPayment.setText("Accept Payment"); // NOI18N
        btnAcceptPayment.setName("btnAcceptPayment"); // NOI18N
        btnAcceptPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptPaymentActionPerformed(evt);
            }
        });
        pnlButton.add(btnAcceptPayment);

        btnReprintOR.setText("Reprint OR"); // NOI18N
        btnReprintOR.setName("btnReprintOR"); // NOI18N
        btnReprintOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReprintORActionPerformed(evt);
            }
        });
        pnlButton.add(btnReprintOR);

        btnPrintStatementOfAccount.setText("Print SOA"); // NOI18N
        btnPrintStatementOfAccount.setName("btnPrintStatementOfAccount"); // NOI18N
        btnPrintStatementOfAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintStatementOfAccountActionPerformed(evt);
            }
        });
        pnlButton.add(btnPrintStatementOfAccount);

        btnSurchargeCalculator.setText("Surcharge Calculator"); // NOI18N
        btnSurchargeCalculator.setName("btnSurchargeCalculator"); // NOI18N
        btnSurchargeCalculator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSurchargeCalculatorActionPerformed(evt);
            }
        });
        pnlButton.add(btnSurchargeCalculator);

        btnAdjust.setText("Adjust"); // NOI18N
        btnAdjust.setName("btnAdjust"); // NOI18N
        btnAdjust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdjustActionPerformed(evt);
            }
        });
        pnlButton.add(btnAdjust);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(pnlButton, gridBagConstraints);

        pnlSearch.setName("pnlSearch"); // NOI18N
        pnlSearch.setLayout(new java.awt.GridLayout(1, 0));

        pnPatientList.setBeanName("PersonCashierExt"); // NOI18N
        pnPatientList.setMinimumSize(new java.awt.Dimension(500, 30));
        pnPatientList.setName("pnPatientList"); // NOI18N
        pnPatientList.setPreferredSize(new java.awt.Dimension(500, 30));
        pnPatientList.setShowForm(false);
        pnPatientList.setShowResult(true);

        javax.swing.GroupLayout pnPatientListLayout = new javax.swing.GroupLayout(pnPatientList);
        pnPatientList.setLayout(pnPatientListLayout);
        pnPatientListLayout.setHorizontalGroup(
            pnPatientListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        pnPatientListLayout.setVerticalGroup(
            pnPatientListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        pnlSearch.add(pnPatientList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(pnlSearch, gridBagConstraints);

        pnlPatientInfo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        pnlPatientInfo.setBeanName("PersonSnapshotExt"); // NOI18N
        pnlPatientInfo.setMinimumSize(new java.awt.Dimension(300, 180));
        pnlPatientInfo.setName("pnlPatientInfo"); // NOI18N
        pnlPatientInfo.setPreferredSize(new java.awt.Dimension(300, 180));

        javax.swing.GroupLayout pnlPatientInfoLayout = new javax.swing.GroupLayout(pnlPatientInfo);
        pnlPatientInfo.setLayout(pnlPatientInfoLayout);
        pnlPatientInfoLayout.setHorizontalGroup(
            pnlPatientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        pnlPatientInfoLayout.setVerticalGroup(
            pnlPatientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(pnlPatientInfo, gridBagConstraints);

        txtSearchPatient.setMinimumSize(new java.awt.Dimension(280, 30));
        txtSearchPatient.setName("txtSearchPatient"); // NOI18N
        txtSearchPatient.setPreferredSize(new java.awt.Dimension(280, 30));
        txtSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchPatientActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        add(txtSearchPatient, gridBagConstraints);

        pnlBilling.setBeanName("CashierOutPatientExt"); // NOI18N
        pnlBilling.setMinimumSize(new java.awt.Dimension(0, 150));
        pnlBilling.setName("pnlBilling"); // NOI18N
        pnlBilling.setPreferredSize(new java.awt.Dimension(0, 150));
        pnlBilling.setShowForm(false);
        pnlBilling.setShowImage(false);
        pnlBilling.setShowResult(true);

        javax.swing.GroupLayout pnlBillingLayout = new javax.swing.GroupLayout(pnlBilling);
        pnlBilling.setLayout(pnlBillingLayout);
        pnlBillingLayout.setHorizontalGroup(
            pnlBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        pnlBillingLayout.setVerticalGroup(
            pnlBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 0, 0);
        add(pnlBilling, gridBagConstraints);

        pnlPayment.setBeanName("InvoiceExt"); // NOI18N
        pnlPayment.setMinimumSize(new java.awt.Dimension(0, 210));
        pnlPayment.setName("pnlPayment"); // NOI18N
        pnlPayment.setPreferredSize(new java.awt.Dimension(0, 210));
        pnlPayment.setShowForm(false);
        pnlPayment.setShowImage(false);
        pnlPayment.setShowResult(true);

        javax.swing.GroupLayout pnlPaymentLayout = new javax.swing.GroupLayout(pnlPayment);
        pnlPayment.setLayout(pnlPaymentLayout);
        pnlPaymentLayout.setHorizontalGroup(
            pnlPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        pnlPaymentLayout.setVerticalGroup(
            pnlPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 0, 0);
        add(pnlPayment, gridBagConstraints);

        lblSurchargeAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSurchargeAmount.setText("--"); // NOI18N
        lblSurchargeAmount.setName("lblSurchargeAmount"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 16, 0, 0);
        add(lblSurchargeAmount, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchPatientActionPerformed
    searchOldStudent();
}//GEN-LAST:event_txtSearchPatientActionPerformed

protected void searchOldStudent() {
    String txt = txtSearchPatient.getText();
    System.out.println("SEARCH STUDENT SERVER CALL");
    List lst = null;
    if (txt==null || txt.isEmpty()) {
        lst = DBClient.getList("SELECT a FROM Patient a");
    }
    else {
        lst = DBClient.getList("SELECT a FROM Patient a WHERE a.lastName LIKE '" + txt + "%' OR a.firstName LIKE '" + txt + "%'");
    }
    pnPatientList.setList(lst);
}

private void btnAcceptPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptPaymentActionPerformed
    acceptPayment();
}//GEN-LAST:event_btnAcceptPaymentActionPerformed

private void btnReprintORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReprintORActionPerformed
	Invoice p = (Invoice) pnlPayment.getBean();
    if (p == null || p.orNumber == null || p.orNumber.trim().isEmpty() || p.orNumber.equals("-1")) {
        PanelUtil.showError(btnReprintOR, "Payment does not have OR yet or not yet paid");
    } else {
        p.printOR("Print OR");
    }
}//GEN-LAST:event_btnReprintORActionPerformed

private void btnPrintStatementOfAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintStatementOfAccountActionPerformed
	OutPatient p = (OutPatient) pnlBilling.getBean();
	AbstractReportTemplate.getInstance().showReportFromFileTemplate("PatientBillingItems", p.seq+"");
}//GEN-LAST:event_btnPrintStatementOfAccountActionPerformed

private void btnDeletePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePaymentActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_btnDeletePaymentActionPerformed

private void btnViewOtherPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOtherPaymentsActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_btnViewOtherPaymentsActionPerformed

private void btnViewBookPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBookPaymentsActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_btnViewBookPaymentsActionPerformed

private void btnRequestDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestDiscountActionPerformed
}//GEN-LAST:event_btnRequestDiscountActionPerformed

private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
}//GEN-LAST:event_btnEditActionPerformed

private void btnSurchargeCalculatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSurchargeCalculatorActionPerformed
//    Student stud = (Student) pnlStudentList.getBean();
//    SurchargeCalculator.display(stud, useYear);
    SurchargeCalculator.display(pnlBilling.view.list);
}//GEN-LAST:event_btnSurchargeCalculatorActionPerformed

private void btnAdjustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdjustActionPerformed
	OutPatient p = (OutPatient) pnlBilling.getBean();
    beanPanelPallete1.setBean(p);
	PanelUtil.showDialog(pnlAdjust, "Assessment Adjustment");
}//GEN-LAST:event_btnAdjustActionPerformed

private void btnSaveAdjustmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAdjustmentActionPerformed
	OutPatient p = (OutPatient) beanPanelPallete1.getBean();
    p.adjustedBy = UserInfo.getUserName();
    p.adjustedDate = new Date();
    p.save();
}//GEN-LAST:event_btnSaveAdjustmentActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.BeanPanelPallete beanPanelPallete1;
    private javax.swing.JButton btnAcceptPayment;
    private javax.swing.JButton btnAdjust;
    private javax.swing.JButton btnDeletePayment;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnPrintStatementOfAccount;
    private javax.swing.JButton btnReprintOR;
    private javax.swing.JButton btnRequestDiscount;
    private javax.swing.JButton btnSaveAdjustment;
    private javax.swing.JButton btnSurchargeCalculator;
    private javax.swing.JButton btnViewBookPayments;
    private javax.swing.JButton btnViewOtherPayments;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblSurchargeAmount;
    public component.BeanPanelPallete pnPatientList;
    private javax.swing.JPanel pnlAdjust;
    public component.BeanPanelPallete pnlBilling;
    protected javax.swing.JPanel pnlButton;
    public component.BeanPanelPallete pnlPatientInfo;
    public component.BeanPanelPallete pnlPayment;
    protected javax.swing.JPanel pnlSearch;
    public javax.swing.JTextField txtSearchPatient;
    // End of variables declaration//GEN-END:variables

    public double getCandidateAmount() {
    	OutPatient p = (OutPatient) pnlBilling.getBean();
    	return p.totalBalance;
    }
    
    public void reloadPayments() {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                Person st = (Person) pnPatientList.getBean();
                //set the student snap shot
                pnlPatientInfo.setBean(st);
                //clear the payments
                pnlBilling.setList(new ArrayList());
                pnlPayment.setList(new ArrayList());
                if (st==null || st.personId==null) return; 
                
//                get all the OutPatient record of Patient
                List lst = DBClient.getList("SELECT a FROM OutPatient a WHERE a.patientId="+st.personId+" ORDER BY a.consultDate DESC");
                pnlBilling.setList(lst);
//                get all the Invoices of Patient
                List lst2 = DBClient.getList("SELECT a FROM Invoice a WHERE a.billTo='"+st.personId+"' ORDER BY a.invoiceDate DESC");
                pnlPayment.setList(lst2);
            }
        });
    }

    public Person getPerson() {
    	return (Person) pnPatientList.getBean();
    }

    public void searchOR(String or) {
//        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setDrawer(AbstractCashierForm form) {
        this.drawer = form;
    }
    
    public void updateBilling() {
    	OutPatient p = (OutPatient) pnlBilling.getBean();
    	if (p!=null) p.save();
    }

    public OutPatient getBilling() {
    	return (OutPatient) pnlBilling.getBean();
    }
}
