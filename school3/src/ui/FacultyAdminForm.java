/*
 * FacultyAdmin.java
 *
 * Created on October 3, 2009, 12:46 PM
 */

package ui;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

import bean.Schedule;
import bean.person.FacultyGradingTask;
import bean.reference.Course;
import bean.reference.GradeLevel;
import bean.reference.Section;

import constants.UserInfo;

import template.report.AbstractReportTemplate;
import template.screen.TransactionPanel;
import util.BeanUtil;
import util.DBClient;
import util.Log;
import util.PanelUtil;

/**
 *
 * @author  alex
 */
public class FacultyAdminForm extends TransactionPanel {
    
    /** Creates new form FacultyAdmin */
    public FacultyAdminForm() {
        initComponents();
        PanelUtil.updateColor(jLabel1);
        PanelUtil.updateColor(jLabel2);
        PanelUtil.updateColor(this);
        PanelUtil.updateColor(jPanel1);
        PanelUtil.updateColor(pnlReportViewer);
    }
    
    protected ComboBoxModel getSections() {
    	return new DefaultComboBoxModel(getSectionList().toArray());
    }
    
    private List getSectionList() {
        String sql = "";
    	List lst = new ArrayList();
    	if (UserInfo.loginUser.isSuperAAA()) {
            sql = "SELECT a FROM Section a ORDER BY a.gradeLevel, a.code";
        	lst = DBClient.getList(sql);
        	return lst;
    	}
    	else {
        	int personId = UserInfo.getPersonId();
            sql = BeanUtil.concat("SELECT a FROM Course a WHERE a.headId=",personId);
            Log.out("TEST = 1",sql);
        	List<Course> courses = DBClient.getList(sql);
        	if (courses!=null && !courses.isEmpty()) {
            	for (Course c:courses) {
                    sql = BeanUtil.concat("SELECT a FROM Section a, GradeLevel b WHERE a.gradeLevel=b.code AND b.course='",c.code,"' ORDER BY a.gradeLevel, a.code");
                    Log.out("TEST = 2",sql);
                	List sections = DBClient.getList(sql);
                	lst.addAll(sections);
            	}
            	return lst;
        	}
            sql = BeanUtil.concat("SELECT a FROM GradeLevel a WHERE a.headId=",personId);
            Log.out("TEST = 3",sql);
        	List<GradeLevel> levels = DBClient.getList(sql);
        	if (levels!=null && !levels.isEmpty()) {
            	for (GradeLevel c:levels) {
                    sql = BeanUtil.concat("SELECT a FROM Section a WHERE a.gradeLevel='",c.code,"' ORDER BY a.gradeLevel, a.code");
                	List sections = DBClient.getList(sql);
                	lst.addAll(sections);
            	}
            	return lst;
        	}
            sql = BeanUtil.concat("SELECT a FROM Section a WHERE a.headId=",personId," ORDER BY a.gradeLevel, a.code");
            Log.out("TEST = 4",sql);
        	lst = DBClient.getList(sql);
        	return lst;
    	}
    }

    private int getQuarter() {
    	Integer i = (Integer) cboQuarter.getSelectedItem();
    	if (i==null) {
    		return 0;
    	}
    	return i;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboSection = new javax.swing.JComboBox();
        cboQuarter= new javax.swing.JComboBox();
        btnShowClassRecords = new javax.swing.JButton();
        btnShowValuesGrades = new javax.swing.JButton();
        btnShowSummarySheet = new javax.swing.JButton();
        btnShowReportCards = new javax.swing.JButton();
        pnlReportViewer = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Section:");
        jPanel1.add(jLabel1);

        cboSection.setModel(getSections());
        jPanel1.add(cboSection);

        jLabel2.setText("   Qtr:");
        jPanel1.add(jLabel2);

        cboQuarter.setModel(new DefaultComboBoxModel(new Integer[] {1,2,3,4}));
        jPanel1.add(cboQuarter);

        btnShowClassRecords.setText("Show Class Records");
        btnShowClassRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowClassRecordsActionPerformed(evt);
            }
        });
        jPanel1.add(btnShowClassRecords);

        btnShowValuesGrades.setText("Values Grades");
        btnShowValuesGrades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowValuesGradesActionPerformed(evt);
            }
        });
        jPanel1.add(btnShowValuesGrades);

        btnShowSummarySheet.setText("Summary Sheet");
        btnShowSummarySheet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowSummarySheetActionPerformed(evt);
            }
        });
        jPanel1.add(btnShowSummarySheet);

        btnShowReportCards.setText("Report Cards");
        btnShowReportCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowReportCardsActionPerformed(evt);
            }
        });
        jPanel1.add(btnShowReportCards);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        javax.swing.GroupLayout pnlReportViewerLayout = new javax.swing.GroupLayout(pnlReportViewer);
        pnlReportViewer.setLayout(pnlReportViewerLayout);
        pnlReportViewerLayout.setHorizontalGroup(
            pnlReportViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 587, Short.MAX_VALUE)
        );
        pnlReportViewerLayout.setVerticalGroup(
            pnlReportViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 267, Short.MAX_VALUE)
        );

        add(pnlReportViewer, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    protected void btnShowValuesGradesActionPerformed(ActionEvent evt) {
    	Section s = (Section) cboSection.getSelectedItem();
    	if (s!=null && !s.isEmptyKey()) {
    		AbstractReportTemplate.getInstance().showReportFromFileTemplate(BeanUtil.concat("Q",getQuarter(),"_ValuesGrades"), s.code, pnlReportViewer);
    	}
	}

	private void btnShowClassRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowClassRecordsActionPerformed
    	Section s = (Section) cboSection.getSelectedItem();
    	if (s!=null && !s.isEmptyKey()) {
    		List<Schedule> l = DBClient.getList("SELECT a FROM Schedule a WHERE a.section='",s.code,"'");
    		Schedule sc = (Schedule) PanelUtil.showPromptMessage(null, "Select subject to display", "", l, "");
        	if (sc!=null && !sc.isEmptyKey()) {
        		FacultyGradingTask task = (FacultyGradingTask) DBClient.getFirstRecord("SELECT a FROM FacultyGradingTask a WHERE a.scheduleId=",sc.seq);
        		AbstractReportTemplate.getInstance().showReportFromFileTemplate(BeanUtil.concat("Q",getQuarter(),"_ClassRecord"), sc.seq, pnlReportViewer, task);
        	}
    	}
    }//GEN-LAST:event_btnShowClassRecordsActionPerformed

    private void btnShowSummarySheetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowSummarySheetActionPerformed
    	Section s = (Section) cboSection.getSelectedItem();
    	if (s!=null && !s.isEmptyKey()) {
    		AbstractReportTemplate.getInstance().showReportFromFileTemplate(BeanUtil.concat("Q",getQuarter(),"_Grades"), s.code, pnlReportViewer);
    	}
    }//GEN-LAST:event_btnShowSummarySheetActionPerformed

    private void btnShowReportCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowReportCardsActionPerformed
    	Section s = (Section) cboSection.getSelectedItem();
    	if (s!=null && !s.isEmptyKey()) {
    		AbstractReportTemplate.getInstance().showReportFromFileTemplate(BeanUtil.concat("SectionReportCardQuarter",getQuarter()), s.code, pnlReportViewer);
    	}
    }//GEN-LAST:event_btnShowReportCardsActionPerformed
    
    @Override
	public String getTitle() {
		return "Faculty Admin";
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnShowValuesGrades;
    public javax.swing.JButton btnShowClassRecords;
    public javax.swing.JButton btnShowReportCards;
    public javax.swing.JButton btnShowSummarySheet;
    public javax.swing.JComboBox cboSection;
    public javax.swing.JComboBox cboQuarter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPanel pnlReportViewer;
    // End of variables declaration//GEN-END:variables
    
}
